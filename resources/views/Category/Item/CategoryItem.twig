{% extends getPartial('page-design') %}
{% import "CeresCoconut::Category.Macros.CategoryTree" as Tree %}
{% import "Ceres::PageDesign.Macros.LayoutContainer" as LayoutContainer %}

{% set categoryDescriptionBottom = ceresConfig.item.showCategoryDescriptionBottom %}
{% set categoryDescriptionTop = ceresConfig.item.showCategoryDescriptionTop %}
{% set decimalCount = ceresConfig.item.storeSpecial %}
{% set overrideSearchFilters = LayoutContainer.show("Ceres::Search.Filter", facets ) %}

{% block PageBody %}

    {{ component( "CeresCoconut::ItemList.Components.CategoryItemETC") }}
    {{ component( "Ceres::ItemList.Components.Filter.ItemFilterList") }}
    {{ component( "Ceres::ItemList.Components.Filter.ItemFilterTagList") }}
    {{ component( "Ceres::ItemList.Components.ItemList") }}

    {% set shippingCat = config("Ceres.global.shippingCostsCategoryId") %}

    <div class="d-flex">
      <div class="cat-left col-lg-2 pr-0">
        <ul id="sideNavigationContainer" class="mb-0">
            {{ include('CeresCoconut::PageDesign.Partials.Header.SideNavigationETC.twig') }}
        </ul>
        <item-filter-tag-list></item-filter-tag-list>
        {% set overrideSearchFilters = LayoutContainer.show("Ceres::Search.Filter", facets ) %}
        {% if overrideSearchFilters | trim is empty and facets %}
          <item-filter-list :facet-data="{{ facets | json_encode }}"></item-filter-list>
        {% else %}
          {{ overrideSearchFilters }}
        {% endif %}

        {% if ceresConfig.header.showNavBars == "side" or ceresConfig.header.showNavBars == "both" %}
          <div class="col-xs-3 hidden-md-down">
            <div class="sidebar-categories">
              <div class="category-title">{{ trans("Ceres::Template.itemCategories") }}</div>
              {{ include('Ceres::PageDesign.Partials.Header.SideNavigation.twig') }}
            </div>
            {{ LayoutContainer.show("Ceres::CategoryItem.SideNavBarBottom") }}
          </div>
        {% endif %}
      </div>
      <div class="cat-right col-lg-10">
        {% if not isSearch %}
          {% if category.details[0].name == "Deckenbeleuchtung" %}
            <h1 class="CategoryCaption col-lg-6">{% if category.details[0].metaTitle %}{{ category.details[0].metaTitle }}{% else %}{{ category.details[0].name }}{% endif %}</h1> {{ itemCountTotal }} {{ trans("CeresCoconut::Template.ETC_Artikel") }}
            {% include "CeresCoconut::Category.Item.Partials.ItemSorting" with { 'sortingData': searchOptions.sorting, 'selectedSorting': itemSorting } %}
            {% include "CeresCoconut::Category.Item.Partials.ItemsPerPage" with { 'itemsPerPage': searchOptions.itemsPerPage, 'selectedValue': itemsPerPage } %}

            <span class="col-lg-12 CategorySubCaption">{{ category.details[0].shortDescription }}</span>
          {% endif %}
        {% else %}
          {{ LayoutContainer.show("Findologic::CategoryItem.SmartDidYouMean") }}
        {% endif %}

        <div class="col-lg-12 px-0">
            {% if ceresConfig.pagination.position in ['top', 'top_bottom'] %}
                {% include "CeresCoconut::Category.Item.Partials.PaginationETC" %}
            {% endif %}
        </div>

        {% if ceresConfig.item.loadingAnimationType != "blur" %}
          {% include "Ceres::ItemList.Partials.LoadingAnimation" %}
        {% endif %}

        <ul id="catItemList" class="col-lg-12 px-0">
          {% for item in itemList %}
            <category-item
                template-override="#vue-category-itemETC"
                item-data-ref="{{ item.data | json_data }}"
                :decimal-count="{{ ceresConfig.item.storeSpecial }}">

                <template #etc-eigenschaften>
                  {% set countProps = 0 %}
                  {% for prop in item.data.variationProperties %}
                    {% for propGroup in prop.property.groups %}
                      {% if (propGroup.id == 19 and countProps < 6 and prop.property.names.description) %}
                        <div class="pl-4 float-right">{{ prop.property.names.description | raw }}</div>
                        {% set countProps = countProps + 1 %}
                      {% endif %}
                    {% endfor %}
                  {% endfor %}
                </template>
            </category-item>
          {% endfor %}
        </ul>

        <div id="PaginationBottom" class="categoryPagination row margin-top-2 margin-bottom-2 col-lg-9">
          <nav class="navbar navbar-default">
            {% if ceresConfig.pagination.position in ['top', 'top_bottom'] %}
              {% include "CeresCoconut::Category.Item.Partials.PaginationETC" %}
            {% endif %}
          </nav>
        </div>
      </div>

    </div>

    {% if category.details[0].description | trim is not empty %}
      <div id="cnt_Start_SEO" class="container_centered">
          <div class="container">
              <div class="row">
                {% if category.details[0].name == "Deckenbeleuchtung" %}
                <div class="col-lg-12 p-0">
                  {{ category.details[0].description2 | raw }}
                </div>
                {% endif %}
                <div class="col-lg-12 p-0">
                    {{ category.details[0].description | raw }}
                </div>
              </div>
          </div>
      </div>
    {% endif %}

    {{ LayoutContainer.show("CeresCoconut::Payment.Scripts") }}
{% endblock %}

{% block PartialHead %}

    {% if currentPage-1 > 0 %}
        <link rel="prev" href="{{ webstoreConfig.domainSsl }}?{{ query | merge({'page' : currentPage-1 }) | url_encode }}" />
    {% endif %}

    {% if currentPage+1 <= pageMax %}
        <link rel="next" href="{{ webstoreConfig.domainSsl }}?{{ query | merge({'page' : currentPage+1 }) | url_encode }}" />
    {% endif %}

    <title>{% if category.details[0].metaTitle %}{{ category.details[0].metaTitle }}{% else %}{{ category.details[0].name }}{% endif %} g√ºnstig kaufen | {{ config("Ceres.header.company_name") }}</title>

    <meta name="description" content="{{ category.details[0].metaDescription }}">
    <meta name="keywords" content="{{ category.details[0].metaKeywords }}">

    <meta name="robots" content="{{ metaRobots }}">



{% endblock %}
