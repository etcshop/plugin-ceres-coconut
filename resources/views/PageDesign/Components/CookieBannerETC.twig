<script type="x/template" id="vue-cookie-banner">
    <div>
      <div style="backgroud-color: #FFF; padding: 20px;">
        <div style="width: 500px; height: 500px; border: 1px solid #000; background-color: #FFF">{{ cookieSessionStatus }}</div>
        <div style="width: 50px; height: 50px; border: 1px solid #000; background-color: #00FF4D; cursor: pointer" @click="Accepted()">Ja</div>
        <div style="width: 50px; height: 50px; border: 1px solid #000; background-color: #F00; cursor: pointer" @click="Declined">NÃ¶</div>
      </div>
    </div>
</script>

<script>

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Vue.component("cookie-banner", {
  template: "#vue-cookie-banner",
  delimiters: ["${", "}"],
  data()
  {
    return {
        waiting: false,
        cookieSessionStatus: ""
    };
  },
  watch:
  {
      cookiesAccepted(val)
      {
          this.cookieSessionStatus = val;
      }
  },
  mounted()
  {
      this.$nextTick(() =>
      {
          if (this.cookiesAccepted)
          {
              this.cookieSessionStatus = this.cookiesAccepted;
          }
      });
  },
  methods: {
    Accepted()
    {
      this.cookieSessionStatus = "1";
      this.$store.dispatch("cookiesAccepted", this.cookieSessionStatus).then(
        response =>
        {
            this.waiting = false;
        },
        error =>
        {
            this.waiting = false;
      });
    },
    Declined()
    {
      this.cookieSessionStatus = "0";
      this.$store.dispatch("cookiesAccepted", this.cookieSessionStatus).then(
        response =>
        {
            this.waiting = false;
        },
        error =>
        {
            this.waiting = false;
      });
    }
  }
});
</script>
