<script type="x/template" id="vue-cookie-banner">
    <div>
      <div style="backgroud-color: #FFF; padding: 20px;" v-if="cookieSessionStatus === 1">
        <div style="width: 100px; height: 50px; border: 1px solid #000; background-color: #FFF" v-html="cookieSessionStatus"></div>
        <div style="width: 50px; height: 50px; border: 1px solid #000; background-color: #00FF4D; cursor: pointer" @click="Accepted()">Ja</div>
        <div style="width: 50px; height: 50px; border: 1px solid #000; background-color: #F00; cursor: pointer" @click="Declined">NÃ¶</div>
      </div>
    </div>
</script>
 
<script>

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Vue.component("cookie-banner", {
  template: "#vue-cookie-banner",
  delimiters: ["${", "}"],
  data()
  {
    return {
        waiting: false,
        cookieSessionStatus: ""
    };
  },
  watch:
  {
      cookiesAccepted(val)
      {
          this.cookieSessionStatus = val;
      }
  },
  mounted()
  {
      this.$nextTick(() =>
      {
          if (this.cookiesAccepted)
          {
              this.cookieSessionStatus = this.cookiesAccepted;
          }
      });
  },
  methods: {
    Accepted()
    {
      document.cookie = "mcoo=1";
      this.getCookie();
    },
    Declined()
    {
      document.cookie = "mcoo=0";
      this.getCookie();
    },
    getCookie() {
      this.cookieSessionStatus = "";
      var name = "mcoo=";
      var decodedCookie = decodeURIComponent(document.cookie);
      var ca = decodedCookie.split(';');
      for(var i = 0; i <ca.length; i++) {
        var c = ca[i];
        while (c.charAt(0) == ' ') {
          c = c.substring(1);
        }
        if (c.indexOf(name) == 0) {
          this.cookieSessionStatus = c.substring(name.length, c.length);
          return this.cookieSessionStatus;
        }
      }
      return "";
    }
  }
});
</script>
