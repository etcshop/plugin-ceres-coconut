{% import "Ceres::PageDesign.Macros.IncludeComponents" as Loader %}
{% import "Ceres::PageDesign.Macros.LayoutContainer" as LayoutContainer %}
{% import "Ceres::PageDesign.Macros.Translations" as Translations %}
{{ component( "Ceres::PageDesign.Components.Notifications" ) }}
{{ component( "Ceres::Basket.Components.BasketPreview" ) }}
{{ component( "Ceres::Customer.Components.Login" ) }}
{{ component( "Ceres::Customer.Components.Registration" ) }}
{{ component( "Ceres::Basket.Components.AddItemToBasketOverlay" ) }}
{{ component( "Ceres::PageDesign.Components.Popper" ) }}
{{ component( "Ceres::Customer.Components.ForgotPassword" ) }}

{# TODO: remove if shop builder pages can be rebuild by migrations #}
{{ component( "Ceres::Containers.Components.LastSeenItemList" ) }}
{{ component( "Ceres::ItemList.Components.CategoryItem") }}
{{ component( "Ceres::Newsletter.Components.NewsletterInput" ) }}
{{ component( "Ceres::PageDesign.Components.Carousel" ) }}

{% if request.get('isContentBuilder') == 1 %}
    {% include "CeresCoconut::Widgets.WidgetComponents" %}
{% endif %}

{% set currencyFormat = config("Ceres.currency.format") %}
{% set defaultLanguage = services.webstoreConfig.getDefaultLanguage() %}

{% spaceless %}
<!DOCTYPE html>

<html lang="{{ lang }}" data-framework="vue" prefix="og: http://ogp.me/ns#">

<head>
    {% include getPartial('head') %}

    {% block PartialHead %}
    {% endblock %}

    {% for styleTemplate in get_additional_styles() %}
        {% include styleTemplate.path ignore missing with styleTemplate.params %}
    {% endfor %}
</head>

<body class="{{ bodyClasses | join(' ') }}">

{{ LayoutContainer.show("CeresCoconut::PageDesign.AfterOpeningBodyTag") }}

<script>
    if('ontouchstart' in document.documentElement)
    {
        document.body.classList.add("touch");
    }
    else
    {
        document.body.classList.add("no-touch");
    }
</script>
<div id="vue-app">

    <div class="wrapper wrapper-top">
        <!-- messages -->
        <notifications template="#vue-notifications" :initial-notifications="{{ notifications | json_encode() }}"></notifications>
    </div>

    <div class="wrapper wrapper-left">
        <!-- filters -->
    </div>

    <div class="wrapper wrapper-main {% if ceresConfig.header.fixNavBarPos %}isSticky{% endif %}">
        {% include getPartial('header') %}
        <div class="content">
                  <div class="container_centered">

                    {% if (services.template.isMyAccount()) or ('/pages/karriere' in canonicalUrl) or ('/pages/career' in canonicalUrl) or ('/pages/carriere' in canonicalUrl)  or ('/pages/kontakt' in canonicalUrl) or ('/pages/newsletter' in canonicalUrl) or ('/pages/infolettre' in canonicalUrl) or ('/pages/versand' in canonicalUrl) or ('/pages/shipping' in canonicalUrl) or ('pages/envoi' in canonicalUrl) or ('/pages/kontakt' in canonicalUrl) or ('/pages/zahlung' in canonicalUrl) or ('/pages/payment' in canonicalUrl) or ('/pages/paiement' in canonicalUrl)  or ('/pages/faq' in canonicalUrl) or (currTpl == 'tpl.contact') or (currTpl == 'tpl.wish-list') or (services.template.getCurrentTemplate() == 'tpl.confirmation' and request.getRequestUri()|replace({'/': ''}) == 'confirmation') %}
                        {% set showMyAccountSubMenu = true %}
                    {% else %}
                        {% set showMyAccountSubMenu = false %}
                    {% endif %}

                    <!-- breadcrumb -->
                    {% if not services.template.isHome() and not services.template.isMyAccount() and not services.template.isCheckout() and not showMyAccountSubMenu and 'tpl.basket' not in currTpl %}
                      {% include "CeresCoconut::PageDesign.Partials.Header.Breadcrumb" %}
                    {% endif %}

                    {% if services.template.isHome() %}
                      {% set mainContentCentered = ' class="container_centered"' %}
                  {% else %}
                      {% set mainContentCentered = '' %}
                    {% endif %}

                    {% if category.linklist == "Y" %}
                        {% set initialCategory = { id: category.id } %}
                    {% else %}
                        {% set initialCategory = category %}
                    {% endif %}
                  </div>
                  <div{% if not services.template.isHome() %} class="container_centered" {% endif %}>

                    {% if showMyAccountSubMenu == true %}
                      <div id="SubMenuButton" class="hidden-lg hidden-sm hidden-md">
                        <i id="SubMenuButton_Icon" class="material-icons">reorder</i>
                        <div id="SubMenuText">{{ trans("CeresCoconut::Template.ETC_ServiceCenter") }}</div>
                      </div>

                      <div class="col-lg-3 col-md-4 col-sm-5" id="MyAccount_left">
                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                          <ul class="Test1702">
                            <li class="col-lg-4 col-xs-4 MyAccoutMenu_Point" id="MyAccoutMenu_Kontakt">
                              <a href="{{ urls.contact }}">
                                <div class="MyAccountLabel">{{ trans("CeresCoconut::Template.ETC_Kontakt") }}</div>
                                <i id="MyAccountKontaktIcon" class="material-icons MyAccountIcon">contact_mail</i>
                              </a>
                            </li>
                            <li class="col-lg-4 col-xs-4 MyAccoutMenu_Point" id="MyAccoutMenu_Retoure">
                              <a href="http://s141963554.online.de/retoure/voll/retoure.php">
                                <div class="MyAccountLabel">{{ trans("CeresCoconut::Template.ETC_Retoure") }}</div>
                                <i id="MyAccountRetoureIcon" class="material-icons MyAccountIcon">reply</i>
                              </a>
                            </li>
                            <li class="col-lg-4 col-xs-4 MyAccoutMenu_Point" id="MyAccoutMenu_Newsletter">
                              {% set newsletter = services.category.get(802, lang) %}
                              <a href="{{ services.category.getURL(newsletter, lang) }}">
                                <div class="MyAccountLabel">{{ trans("CeresCoconut::Template.ETC_Newsletter") }}</div>
                                <i id="MyAccountNewsletterIcon" class="material-icons MyAccountIcon">email</i>
                              </a>
                            </li>
                            <li class="col-lg-4 col-xs-4 MyAccoutMenu_Point" id="MyAccoutMenu_Versand">
                              {% set versand = services.category.get(722, lang) %}
                              <a href="{{ services.category.getURL(versand, lang) }}">
                                <div class="MyAccountLabel">{{ services.category.get(722, lang).details[0].name }}</div>
                                <i id="MyAccountVersandIcon" class="material-icons MyAccountIcon">send</i>
                              </a>
                            </li>
                            <li class="col-lg-4 col-xs-4 MyAccoutMenu_Point" id="MyAccoutMenu_Zahlung">
                              {% set zahlung = services.category.get(725, lang) %}
                              <a href="{{ services.category.getURL(zahlung, lang) }}">
                                <div class="MyAccountLabel">{{ services.category.get(725, lang).details[0].name }}</div>
                                <i id="MyAccountZahlungIcon" class="material-icons MyAccountIcon">euro_symbol</i>
                              </a>
                            </li>
                            <li class="col-lg-4 col-xs-4 MyAccoutMenu_Point" id="MyAccoutMenu_FAQ">
                              {% set FAQ = services.category.get(714, lang) %}
                              <a href="{{ services.category.getURL(FAQ, lang) }}">
                                <div class="MyAccountLabel">{{ services.category.get(714, lang).details[0].name }}</div>
                                <i id="MyAccountFAQIcon" class="material-icons MyAccountIcon">info_outline</i>
                              </a>
                            </li>
                            <li class="col-lg-4 col-xs-4 MyAccoutMenu_Point" id="MyAccoutMenu_Kundendaten">
                              <a href="{{ urls.myAccount }}#sc_Kundendaten">
                                <div class="MyAccountLabel">{{ trans("CeresCoconut::Template.loginMyAccount") }}</div>
                                <i id="MyAccountKundenkontoIcon" class="material-icons MyAccountIcon">account_box</i>
                              </a>
                              </a>
                            </li>
                            <li class="col-lg-4 col-xs-4 MyAccoutMenu_Point" id="MyAccoutMenu_Auftraege">
                              <a href="{{ urls.myAccount }}#sc_Auftraghistorie">
                                <div class="MyAccountLabel">{{ trans("CeresCoconut::Template.ETC_Bestellungen") }}</div>
                                <i id="MyAccountAuftragIcon" class="material-icons MyAccountIcon">restore</i>
                              </a>
                            </li>
                            <li class="col-lg-4 col-xs-4 MyAccoutMenu_Point" id="MyAccoutMenu_Merkliste">
                              <a href="{{ urls.wishList }}#sc_Merkliste">
                                <div class="MyAccountLabel">{{ trans("CeresCoconut::Template.ETC_Merkliste") }}</div>
                                <i id="MyAccountMerklisteIcon" class="material-icons MyAccountIcon">list</i>
                              </a>
                            </li>
                          </ul>
                          {% set loggedIn = frontend.Account.getIsAccountLoggedIn %}
                          {% if loggedIn %}
                            <span id="PlentyWebMyAccountMyAccountLogoutContainer">
                          	   <a class="PlentyWebshopButton logout" id="button_logoutPlentyWebMyAccountLogout" v-logout>{{ trans("CeresCoconut::Template.loginLogout") }}</a>
                             </span>
                          {% else %}
                            <span id="PlentyWebMyAccountMyAccountLogoutContainer">
                               {% set loginURL = "" %}
                               {% if lang != 'de' %}
                                  {% set loginURL = "https://www.etc-shop.de/" + lang + "/login?backlink=https%3A%2F%2Fwww.etc-shop.de%2Fmy-account#sc_Kundendaten"%}
                               {% else %}
                                  {% set loginURL = "https://www.etc-shop.de/login?backlink=https%3A%2F%2Fwww.etc-shop.de%2Fmy-account#sc_Kundendaten"%}
                               {% endif %}
                          	   <a class="PlentyWebshopButton logout" id="button_logoutPlentyWebMyAccountLogout" href="{{ loginURL }}">{{ trans("CeresCoconut::Template.login") }}</a>
                             </span>
                          {% endif %}
                        </div>
                      </div>

                      <div class="col-lg-9 col-md-8 col-sm-12" id="MyAccount_right">
                    {% endif %}
        <div id="page-body" class="main">
            {% block PageBody %}
                <!-- inject content of inherited templates here -->
            {% endblock %}
        </div>

        {% if showMyAccountSubMenu == true %}
          </div>
        {% endif %}

        {% include getPartial('footer') %}

        {% block PartialFooter %}
        {% endblock %}
    </div>

    {% if basket is not defined %}
        {% set basket = services.basket.getBasketForTemplate() %}
    {% endif %}
    {% if ceresConfig.basket.previewType == "right" %}
        <div class="wrapper wrapper-right">
            <basket-preview :show-net-prices={{ showNetPrices | json_encode }}></basket-preview>
        </div>
    {% endif %}

    <div class="wrapper wrapper-bottom">
        <!-- LOGIN MODAL -->
        <div id="login-modal-wrapper">
            <div class="modal fade login-modal" id="login" tabindex="-1" role="dialog">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <div class="modal-title h3">{{ trans("CeresCoconut::Template.login") }}</div>
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        </div>
                        <login template="#vue-login" modal-element="login-modal-wrapper"></login>
                    </div>
                </div>
            </div>
        </div>
        <!-- ./LOGIN MODAL -->

        <!-- REGISTRATION MODAL -->
        <div id="simple-registration-modal-wrapper">
            <div class="modal fade" id="registration" tabindex="-1" role="dialog">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <div class="modal-title h3">
                                {{ trans("CeresCoconut::Template.regCreateAccount") }}

                            </div>

                            <popper v-cloak class="ml-auto">
                                <template #handle>
                                    <button class="btn btn-icon btn-secondary btn-sm">
                                        <i class="fa fa-info"></i>
                                    </button>
                                </template>
                                <template #title>
                                    {{ trans("CeresCoconut::Template.regContactInformations") }}
                                </template>
                                <template #content>
                                    <ul class='pl-3'>
                                        <li class='mb-3'>{{ trans('CeresCoconut::Template.regContactInfoText1') }}</li>
                                        <li class='mb-3'>{{ trans('CeresCoconut::Template.regContactInfoText2') }}</li>
                                        <li class='mb-3'>{{ trans('CeresCoconut::Template.regContactInfoText3') }}</li>
                                        <li>{{ trans('CeresCoconut::Template.regContactInfoText4') }}</li>
                                    </ul>
                                </template>
                            </popper>

                            <button type="button" class="close ml-0" data-dismiss="modal" aria-hidden="true">&times;</button>
                        </div>
                        <registration template="#vue-registration" :is-simple-registration="true" modal-element="simple-registration-modal-wrapper"></registration>
                    </div>
                </div>
            </div>
        </div>
        <!-- ./REGISTRATION MODAL -->

        <!-- BASKET MODAL -->
        <add-item-to-basket-overlay :basket-add-information="{{ ceresConfig.basket.addItemToBasketConfirm | json_encode() }}"></add-item-to-basket-overlay>
        <!-- ./BASKET MODAL -->

        <!-- PASSWORD RESET MODAL -->
        <forgot-password-modal></forgot-password-modal>
        <!-- ./PASSWORD RESET MODAL -->

        <!-- SHIPPINGCOSTS MODAL -->
        {% if ceresConfig.global.shippingCostsCategoryId > 0 %}
        <div id="shippingscosts-modal-wrapper">
            <div class="modal fade" id="shippingscosts" tabindex="-1" role="dialog">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <div class="modal-title h3">{{ trans('CeresCoconut::Template.shippingInfoCosts') }}</div>
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        </div>
                        <div class="modal-body">
                            {% set shopBuilderShippingTemplate = shop_builder_category_template(ceresConfig.global.shippingCostsCategoryId) %}
                            {% if shopBuilderShippingTemplate | trim is not empty %}
                                {{ shopBuilderShippingTemplate | raw }}
                            {% else %}
                                {% include category_template(ceresConfig.global.shippingCostsCategoryId, lang, webstoreConfig.webstoreId) ignore missing %}
                            {% endif %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
        {% endif %}
        <!-- ./SHIPPINGCOSTS MODAL -->
    </div>
</div>

<script>
    App = {
        config: {{ ceresConfig | json_encode | raw }},
        urls: {{ urls | json_encode | raw }},
        activeCurrency: "{{ currencyData[currencyFormat] }}",
        currencyPattern: {{  services.checkout.getCurrencyPattern() | json_encode | raw }},
        isCategoryView: {% if services.template.isCategory() == "1" %}true{% else %}false{% endif %},
        isCheckoutView : {% if services.template.isCheckout() == "1" %}true{% else %}false{% endif %},
        isSearch: {% if services.template.isSearch() == "1" %}true{% else %}false{% endif %},
        templateEvent: "{{ templateEvent }}",
        language: "{{ lang }}",
        defaultLanguage: "{{ defaultLanguage }}",
        decimalSeparator: "{{ config("IO.format.separator_decimal") }}",
        urlTrailingSlash: {{ urls.appendTrailingSlash | json_encode }},
        isShopBuilder: {{ isShopBuilder | default(false) | json_encode }}
    };
</script>


{{ Loader.include_components() }}

{{ LayoutContainer.show("CeresCoconut::Script.Loader") }}

{{ Translations.add( "Ceres", "Template" ) }}
{% if ceresConfig.log.performanceLevel  == 'development' %}
    <script src="{{ plugin_path('Ceres') }}/js/dist/ceres-vendor.js"></script>
    <script src="{{ plugin_path('Ceres') }}/js/dist/ceres-app.js"></script>
{% else %}
    <script src="{{ plugin_path('Ceres') }}/js/dist/ceres.min.js"></script>
{% endif %}

{% for scriptTemplate in get_additional_scripts() %}
    {% include scriptTemplate.path ignore missing with scriptTemplate.params %}
{% endfor %}

{{ LayoutContainer.show("CeresCoconut::Script.AfterScriptsLoaded") }}

{{ get_filtered_tags() }}
{{ get_json_data() }}

<script>
    vueEventHub = new Vue();

    {% if ceresConfig.log.checkSyntax %}
        var rootElement = document.getElementById("vue-app");
        rootElement.innerHTML = rootElement.innerHTML.replace(/(?:^|\s)(?::|v-bind:)\S+=(?:""|'')/g, '');

        var vueApp = new Vue({
            store: window.ceresStore
        });

        vueApp.$mount( rootElement.cloneNode(true) );

        if ( vueApp.$el.id === "vue-app")
        {
            document.body.replaceChild( vueApp.$el, rootElement );
        }
    {% else %}
        var vueApp = new Vue({
            el: "#vue-app",
            store: window.ceresStore
        });
    {% endif %}


    (function($) {

        var vueApp = document.getElementById('vue-app');
        var headerParent = document.getElementById('page-header-parent');
        var headerLoaded = false;
        var allElementHeights = [];

        if ( !!headerParent )
        {
            var headerChildren = headerParent.children;

            function calculateBodyOffset()
            {
                if (headerLoaded && headerParent)
                {
                    var bodyOffset = 0;
                    // Get current header with children
                    if(headerParent === null){
                        return;
                    }

                    for( var i = 0; i < headerChildren.length; i++ )
                    {
                        bodyOffset += headerChildren[i].getBoundingClientRect().height;
                    }

                    vueApp.style.marginTop = bodyOffset + 'px';
                    vueApp.style.minHeight = "calc(100vh - " + bodyOffset + "px)";
                }
            }

            function getHeaderElementsHeights()
            {
                for (var i = 0; i < headerChildren.length; i++)
                {
                    allElementHeights.push(headerChildren[i].getBoundingClientRect().height);
                }
            }

            function scrollHeaderElements()
            {
                if (headerLoaded && !App.isShopBuilder)
                {
                    var absolutePos = 0;
                    var fixedElementsHeight = 0;
                    var offset = 0;
                    var scrollTop = window.pageYOffset;
                    var zIndex = 100;

                    for (var i = 0; i < headerChildren.length; i++)
                    {
                        var elem = headerChildren[i];
                        var elemHeight = allElementHeights[i];

                        offset = absolutePos - scrollTop;
                        elem.style.position = "absolute";
                        elem.style.zIndex = zIndex;
                        zIndex--;

                        if (!elem.classList.contains("unfixed"))
                        {
                            if (offset < 0)
                            {
                                elem.style.top = 0;
                            }
                            else
                            {
                                elem.style.top = offset + 'px';
                            }

                            if (fixedElementsHeight > 0 && offset < fixedElementsHeight)
                            {
                                elem.style.top = fixedElementsHeight + 'px';
                            }

                            fixedElementsHeight = fixedElementsHeight + elemHeight;
                        }
                        else
                        {
                            elem.style.top = offset + 'px';
                        }
                        absolutePos = absolutePos + elemHeight;
                    }
                }
            }

            $(window).scroll(scrollHeaderElements);

            $(document).on('shopbuilder.before.viewUpdate shopbuilder.after.viewUpdate', function()
            {
                calculateBodyOffset();
                $('.owl-carousel').trigger('refresh.owl.carousel');
            });

            var headerImages = headerParent.querySelectorAll("img");

            Promise.all(
                Array.prototype.slice.call(headerImages).map(function(headerImage)
                {
                    return new Promise(function(resolve)
                    {
                        headerImage.onload = function()
                        {
                            resolve();
                        }
                    });
                })
            ).then(function()
            {
                // Initialize
                headerLoaded = true;
                getHeaderElementsHeights();
                scrollHeaderElements();
                calculateBodyOffset();
            });

            calculateBodyOffset();
        }

        $(document).on('shopbuilder.after.drop shopbuilder.after.widget_replace', function(event, eventData, widgetElement)
        {
            var compiled = Vue.compile(widgetElement[0].outerHTML, { delimiters: ["${", "}"] } );
            var component = new Vue({
                store: window.ceresStore,
                render: compiled.render,
                staticRenderFns: compiled.staticRenderFns
            });
            component.$mount( widgetElement[0] );
            $(component.$el).find('*').each(function(index, elem) {
                $(elem).click(function(event) {
                    event.preventDefault();
                });
            });

            $(component.$el).find('.owl-carousel').on('resized.owl.carousel', function()
            {
                window.dispatchEvent(new Event('resize'));
            });
        });


    })(jQuery);
</script>

{{ get_shop_builder_scripts( "latest", ceresConfig.log.performanceLevel == 'live') }}
</body>
</html>
{% endspaceless %}
