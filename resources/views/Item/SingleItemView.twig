{{ services.lastSeen.setLastSeenMaxCount(config("Ceres.item.lists.last_seen_number")) }}

{{ component( "Ceres::Item.Components.VariationSelectETC" ) }}
{{ component( "Ceres::Item.Components.ItemImageCarousel" ) }}
{{ component( "Ceres::Item.Components.ItemImageCarouselETC" ) }}
{{ component( "Ceres::Item.Components.ItemMainImageCarouselETC" ) }}
{{ component( "Ceres::Item.Components.AddToWishListETC" ) }}
{{ component( "Ceres::Item.Components.OrderProperties" ) }}
{{ component( "Ceres::Item.Components.OrderPropertyList" ) }}
{{ component( "Ceres::Item.Components.SingleItemETC" ) }}
{{ component( "Ceres::Item.Components.GraduatedPrices" ) }}
{{ component( "Ceres::Basket.Components.AddToBasketETC" ) }}
{{ component( "Ceres::Item.Components.ItemBundle" ) }}
{{ component( "Ceres::Containers.Components.ContainerCrosssellingItemListETC" ) }}
{{ component( "Ceres::Containers.Components.ContainerItemListETC" ) }}


<single-item v-cloak template="#vue-single-itemETC" :item-data="{{ item | json_data }}" :variation-list-data="{{ variations | json_data }}" :attribute-name-map="{{attributeNameMap | json_encode}}" :variation-units="{{variationUnits | json_encode}}">
    <div slot="BeforePrice">{{ LayoutContainer.show("Ceres::SingleItem.BeforePrice", item.documents[0].data) }}</div>
    <div slot="AfterPrice">{{ LayoutContainer.show("Ceres::SingleItem.AfterPrice", item.documents[0].data) }}</div>
    <div slot="BeforeAddToBasket">{{ LayoutContainer.show("Ceres::SingleItem.BeforeAddToBasket", item.documents[0].data) }}</div>
    <div slot="AfterAddToBasket">{{ LayoutContainer.show("Ceres::SingleItem.AfterAddToBasket", item.documents[0].data) }}</div>
    <div slot="AdditionalContentAfterAddToBasket">{{ LayoutContainer.show("Ceres::SingleItem.AdditionalContentAfterAddToBasket", item.documents[0].data) }}</div>
    <div slot="AdditionalContentAfterVAT">{{ LayoutContainer.show("Ceres::SingleItem.AdditionalContentAfterVAT", item.documents[0].data) }}</div>
    <template slot="AddDetailTabs">{{ LayoutContainer.show("Ceres::SingleItem.AddDetailTabs", item.documents[0].data) }}</template>
    <template slot="AddDetailTabsContent">{{ LayoutContainer.show("Ceres::SingleItem.AddDetailTabsContent", item.documents[0].data) }}</template>
    <div slot="ItemListContainer">
      {% if similar is not empty %}
        <div class="CrossSellingCaption test1550">{{ trans("Ceres::Template.ETC_PassendDazu") }}:</div>
        <crossselling-item-list class="CrossSelling_Similar" :items="{{ similar | json_encode }}" :mainprice="{{ item.documents[0].data.calculatedPrices.default.price }}" :mainid="{{ item.documents[0].data.variation.id }}"></crossselling-item-list>
      {% else %}
        {% set itemList3 = services.itemList.getItemList( "random", "", "variation.position_desc",3 ).documents %}

        <div class="CrossSellingCaption">{{ trans("Ceres::Template.ETC_AehnlicheArtikel") }}:</div>
        <crossselling-item-list class="CrossSelling_Random" :items="{{ itemList3 | json_encode }}" :mainprice="{{ item.documents[0].data.calculatedPrices.default.price }}" :mainid="{{ item.documents[0].data.variation.id }}"></crossselling-item-list>
      {% endif %}
    </div>
    <div slot="FeedbackContainer">{{ LayoutContainer.show("Ceres::SingleItem.FeedbackContainer", item) }}</div>

    <div slot="CrossSellingAccessory">
    {{ component("Ceres::Containers.Components.ContainerItemListDirectCross") }}
    {% if replacementPart|length > 0 %}
            <div class="crossSelling">
                <container-item-list-direct-cross :items="{{ replacementPart | json_encode }}" :mainprice="{{ item.documents[0].data.calculatedPrices.default.price }}" :mainid="{{ item.documents[0].data.variation.id }}"></container-item-list-direct-cross>
            </div>
    {% endif %}
    </div>
</single-item>
